// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(cuid())
  email          String @unique
  hashedPassword String
  posts          Post[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String
  likes     Int      @default(0)
  dislikes  Int      @default(0)
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Призма таким образом понимает, что когда происходит обновление, updatedAt должен обновляться

  // комбинация уникальности полей 
  // @@unique([title, slug])

  // если я хочу использовать к коед camelCase, но не хочу его использовать в БД=
  // @@map("title_to_slug")

  // оптимизация запросов по индексу
  // @@index(slug)
  User User? @relation(fields: [authorId], references: [id]) // тут мы говорим таблице, что у поста может быть автор и его айди берется из таблицы юзер по id
  // * Данный вариант называется 1 ко многим

  // User User[] // * Данный вариант называется многие ко многим, когда у одного поста может быть несколько авторов

  authorId String?
}
